<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eun.tutorial.mapper.main.MenuMapper">

<!-- 	<select id="selectMenuList" resultType="com.eun.tutorial.dto.main.MenuDTO">
		SELECT CATEGORY, MENU_LEVEL, MENU_AUTH, MENU_ID, MENU_PATH, MENU_ICON, MENU_ORDER, PARENT_MENU_ID, id, del_yn, create_id, create_dt, update_id, update_dt FROM ZTHH_MENU where del_yn='N' ORDER BY CATEGORY, menu_level, menu_order
	</select> -->

	<select id="selectMenuList" resultType="com.eun.tutorial.dto.main.MenuDTO">
		SELECT *
			FROM zthh_menu
			WHERE DEL_YN = 'N'
			START WITH PARENT_MENU_ID = 'N/A'
			CONNECT BY PARENT_MENU_ID = PRIOR MENU_ID
			ORDER SIBLINGS BY MENU_ORDER
	</select>
	
	<select id="getMenuAuthByRole" resultType="com.eun.tutorial.dto.main.MenuDTO">
	  SELECT CASE
	    <choose>
	      <when test="role == 'ROLE_SYS'">
	        WHEN MENU_AUTH IN ('ROLE_SYS', 'ROLE_ADMIN', 'ROLE_FAMILY', 'ROLE_USER', 'ROLE_ANY') THEN 'Y'
	      </when>
	      <when test="role == 'ROLE_ADMIN'">
	        WHEN MENU_AUTH IN ('ROLE_ADMIN', 'ROLE_FAMILY', 'ROLE_USER', 'ROLE_ANY') THEN 'Y'
	      </when>
	      <when test="role == 'ROLE_FAMILY'">
	        WHEN MENU_AUTH IN ('ROLE_FAMILY', 'ROLE_USER', 'ROLE_ANY') THEN 'Y'
	      </when>
	      <when test="role == 'ROLE_USER'">
	        WHEN MENU_AUTH IN ('ROLE_USER', 'ROLE_ANY') THEN 'Y'
	      </when>
	      <when test="role == 'ROLE_ANY'">
	        WHEN MENU_AUTH IN ('ROLE_ANY') THEN 'Y'
	      </when>
	      <!-- 다른 롤에 대한 처리 추가 -->
	      <otherwise>
	        ELSE 'N'
	      </otherwise>
	    </choose>
	  END AS MENU_AUTH, m.ID, m.MENU_ID, m.PARENT_MENU_ID
	  FROM zthh_menu m
	  WHERE DEL_YN = 'N'
	  START WITH PARENT_MENU_ID = 'N/A'
	  CONNECT BY PRIOR MENU_ID = PARENT_MENU_ID
	  ORDER SIBLINGS BY MENU_ORDER
	</select>
	

	<insert id="insertMenu">
		INSERT INTO ZTHH_MENU (CATEGORY, MENU_LEVEL, MENU_AUTH, MENU_ID, MENU_PATH, MENU_ICON, MENU_ORDER, PARENT_MENU_ID, id, del_yn, create_id, create_dt, update_id, update_dt)
		VALUES (#{category}, #{menuLevel}, #{menuAuth}, #{menuId}, #{menuPath}, #{menuIcon}, #{menuOrder}, #{parentMenuId}, #{id}, 'N', #{createId}, CURRENT_TIMESTAMP, #{updateId}, CURRENT_TIMESTAMP)
	</insert>

	<update id="updateMenu">
		UPDATE ZTHH_MENU
		SET CATEGORY = #{category}, MENU_LEVEL = #{menuLevel}, MENU_AUTH = #{menuAuth}, MENU_ID = #{menuId}, MENU_PATH = #{menuPath}, MENU_ICON = #{menuIcon}, MENU_ORDER = #{menuOrder}, PARENT_MENU_ID = #{parentMenuId}, update_id = #{updateId}, update_dt = CURRENT_TIMESTAMP
		WHERE id = #{id}
	</update>

	<delete id="deleteMenu">
		UPDATE ZTHH_MENU SET del_yn = 'Y', update_dt = CURRENT_TIMESTAMP WHERE id = #{id}
	</delete>

	<select id="getMenuListById" parameterType="string" resultType="com.eun.tutorial.dto.main.MenuDTO">
		SELECT CATEGORY, MENU_LEVEL, MENU_AUTH, MENU_ID, MENU_PATH, MENU_ICON, MENU_ORDER, PARENT_MENU_ID, id, del_yn, create_id, create_dt, update_id, update_dt FROM ZTHH_MENU
		WHERE id = #{id}
		ORDER BY update_dt, create_dt
	</select>
	
    <update id="updateMenuAuthByMenuIds">
        UPDATE ZTHH_MENU
        SET MENU_AUTH = #{role}
        WHERE id IN
        <foreach item="menuId" collection="menuIds" open="(" separator="," close=")">
            #{menuId}
        </foreach>
    </update>
	
    <update id="updateMenuControl">
      <![CDATA[
		UPDATE ZTHH_MENUCONTROL c
		SET c.ROLE_ID = (SELECT SUBSTR(m.MENU_AUTH, 6)
		                 FROM ZTHH_MENU m
		                 WHERE m.MENU_PATH = c.URL
		                 AND m.DEL_YN = 'N'
		                 AND SUBSTR(m.MENU_AUTH, 6) <> c.ROLE_ID)
		WHERE c.URL IN (SELECT m.MENU_PATH
		                FROM ZTHH_MENU m
		                WHERE m.DEL_YN = 'N'
		                AND SUBSTR(m.MENU_AUTH, 6) <> c.ROLE_ID)
      ]]> 		                
    </update>

</mapper>